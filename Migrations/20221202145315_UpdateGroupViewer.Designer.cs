// <auto-generated />
using System;
using ENSC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace projetalexmargo.Migrations
{
    [DbContext(typeof(ENSCContext))]
    [Migration("20221202145315_UpdateGroupViewer")]
    partial class UpdateGroupViewer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("ENSC.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupeIdId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupeIdId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ENSC.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("NbMembers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresidentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PresidentId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ENSC.GroupViewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdEventId");

                    b.HasIndex("IdGroupId");

                    b.ToTable("GroupViewers");
                });

            modelBuilder.Entity("ENSC.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdStudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdGroupId");

                    b.HasIndex("IdStudentId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ENSC.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAdress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Promo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ENSC.Event", b =>
                {
                    b.HasOne("ENSC.Group", "GroupeId")
                        .WithMany("Events")
                        .HasForeignKey("GroupeIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupeId");
                });

            modelBuilder.Entity("ENSC.Group", b =>
                {
                    b.HasOne("ENSC.Student", "President")
                        .WithMany("Groups")
                        .HasForeignKey("PresidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("President");
                });

            modelBuilder.Entity("ENSC.GroupViewer", b =>
                {
                    b.HasOne("ENSC.Event", "IdEvent")
                        .WithMany()
                        .HasForeignKey("IdEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENSC.Group", "IdGroup")
                        .WithMany()
                        .HasForeignKey("IdGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEvent");

                    b.Navigation("IdGroup");
                });

            modelBuilder.Entity("ENSC.Member", b =>
                {
                    b.HasOne("ENSC.Group", "IdGroup")
                        .WithMany()
                        .HasForeignKey("IdGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENSC.Student", "IdStudent")
                        .WithMany()
                        .HasForeignKey("IdStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdGroup");

                    b.Navigation("IdStudent");
                });

            modelBuilder.Entity("ENSC.Group", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("ENSC.Student", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
